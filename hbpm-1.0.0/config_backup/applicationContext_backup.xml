<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd" 
       >

	<!--bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" p:location="/WEB-INF/jdbc.properties" /> <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" / -->

	<!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->

	<context:component-scan base-package="com" />
	<context:annotation-config />
	<mvc:resources mapping="/**" location="/" />
	 <mvc:default-servlet-handler/>
	<mvc:annotation-driven />

	<mvc:interceptors>
		<bean class="com.hrv.core.mvc.DefaultInterceptor" />
	</mvc:interceptors>


	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" p:driverClassName="oracle.jdbc.OracleDriver" p:url="jdbc:oracle:thin:@localhost:1521:local"
		p:username="hbpm" p:password="hbpm" />

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"></ref>
		</property>
<!-- 		<property name="packagesToScan" value="*" /> -->
		<!-- <property name="mappingLocations"> -->
		<!-- <list> -->
		<!-- <value>classpath*:/**/*hbm.xml</value> -->
		<!-- </list> -->
		<!-- </property> -->
		<property name="mappingResources">
			<list>
				<value>com/hrv/model/BaseTask.hbm.xml</value>
				<value>com/hrv/model/SequenceFlow.hbm.xml</value>
				<value>com/hrv/model/Service.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">validate</prop> -->
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:annotation-driven />

	<bean id="txProxyTemplate" abstract="true" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="create">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="insert">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="remove*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="execute*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="*">PROPAGATION_REQUIRED, readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="template" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="daoTemplate" class="com.hrv.core.hibernate.DaoTemplate">
		<property name="template" ref="template"></property>
	</bean>
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="WaitForTasksToCompleteOnShutdown" value="true" />
	</bean>
	<bean id="serviceExecutor" class="com.hrv.springmvc.service.service.impl.ServiceExecutor" scope="prototype">
	</bean>
	<bean id="serviceDao" class="com.hrv.springmvc.service.service.impl.ServiceDaoImpl" parent="daoTemplate"></bean>
	<bean id="serviceService" parent="txProxyTemplate">
		<property name="target">
			<bean class="com.hrv.springmvc.service.service.impl.ServiceServiceImpl">
				<property name="serviceDao" ref="serviceDao" />
				<property name="taskService" ref="taskService" />
				<property name="sequenceFlowService" ref="sequenceFlowService" />
				<property name="taskExecutor" ref="taskExecutor" />
			</bean>
		</property>
	</bean>
	<bean id="taskDao" class="com.hrv.springmvc.task.service.impl.TaskDaoImpl" parent="daoTemplate"></bean>
	<bean id="taskService" parent="txProxyTemplate">
		<property name="target">
			<bean class="com.hrv.springmvc.task.service.impl.TaskServiceImpl">
				<property name="taskDao" ref="taskDao" />
			</bean>
		</property>
	</bean>
	<bean id="sequenceFlowDao" class="com.hrv.springmvc.sequenceflow.service.impl.SequenceFlowDaoImpl" parent="daoTemplate"></bean>
	<bean id="sequenceFlowService" parent="txProxyTemplate">
		<property name="target">
			<bean class="com.hrv.springmvc.sequenceflow.service.impl.SequenceFlowServiceImpl">
				<property name="sequenceFlowDao" ref="sequenceFlowDao" />
			</bean>
		</property>
	</bean>

<!-- 	<bean id="memoryClassLoader" class="com.hrv.core.utils.MemoryClassLoader"> -->
<!-- 	</bean> -->
<!-- 	<bean id="daoLoader" class="com.hrv.core.hibernate.DaoLoader"> -->
<!-- 		<property name="hibernateTemplate" ref="template"></property> -->
<!-- 		<property name="memoryClassLoader" ref="memoryClassLoader"></property> -->
<!-- 	</bean> -->
</beans>